"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

class PiEMOSHealth(object):
    __slots__ = ["TeleopEnabled", "LocalRobotEnabled", "AutonomousEnabled", "FieldRobotEnabled", "Stage", "Time", "Uptime", "PiEMOSState"]

    def __init__(self):
        self.TeleopEnabled = False
        self.LocalRobotEnabled = False
        self.AutonomousEnabled = False
        self.FieldRobotEnabled = False
        self.Stage = ""
        self.Time = 0
        self.Uptime = 0.0
        self.PiEMOSState = ""

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(PiEMOSHealth._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bbbb", self.TeleopEnabled, self.LocalRobotEnabled, self.AutonomousEnabled, self.FieldRobotEnabled))
        __Stage_encoded = self.Stage.encode('utf-8')
        buf.write(struct.pack('>I', len(__Stage_encoded)+1))
        buf.write(__Stage_encoded)
        buf.write("\0")
        buf.write(struct.pack(">if", self.Time, self.Uptime))
        __PiEMOSState_encoded = self.PiEMOSState.encode('utf-8')
        buf.write(struct.pack('>I', len(__PiEMOSState_encoded)+1))
        buf.write(__PiEMOSState_encoded)
        buf.write("\0")

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != PiEMOSHealth._get_packed_fingerprint():
            raise ValueError("Decode error")
        return PiEMOSHealth._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = PiEMOSHealth()
        self.TeleopEnabled, self.LocalRobotEnabled, self.AutonomousEnabled, self.FieldRobotEnabled = struct.unpack(">bbbb", buf.read(4))
        __Stage_len = struct.unpack('>I', buf.read(4))[0]
        self.Stage = buf.read(__Stage_len)[:-1].decode('utf-8', 'replace')
        self.Time, self.Uptime = struct.unpack(">if", buf.read(8))
        __PiEMOSState_len = struct.unpack('>I', buf.read(4))[0]
        self.PiEMOSState = buf.read(__PiEMOSState_len)[:-1].decode('utf-8', 'replace')
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if PiEMOSHealth in parents: return 0
        tmphash = (0xcf819a10af0a415c) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if PiEMOSHealth._packed_fingerprint is None:
            PiEMOSHealth._packed_fingerprint = struct.pack(">Q", PiEMOSHealth._get_hash_recursive([]))
        return PiEMOSHealth._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

