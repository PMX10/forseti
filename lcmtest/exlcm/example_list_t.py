"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

import cStringIO as StringIO
import struct

import example_t

class example_list_t(object):
    __slots__ = ["n", "examples"]

    def __init__(self):
        self.n = 0
        self.examples = []

    def encode(self):
        buf = StringIO.StringIO()
        buf.write(example_list_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">i", self.n))
        for i0 in range(self.n):
            assert self.examples[i0]._get_packed_fingerprint() == example_t.example_t._get_packed_fingerprint()
            self.examples[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = StringIO.StringIO(data)
        if buf.read(8) != example_list_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return example_list_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = example_list_t()
        self.n = struct.unpack(">i", buf.read(4))[0]
        self.examples = []
        for i0 in range(self.n):
            self.examples.append(example_t.example_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if example_list_t in parents: return 0
        newparents = parents + [example_list_t]
        tmphash = (0x350c81d61683c1c0+ example_t.example_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if example_list_t._packed_fingerprint is None:
            example_list_t._packed_fingerprint = struct.pack(">Q", example_list_t._get_hash_recursive([]))
        return example_list_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

